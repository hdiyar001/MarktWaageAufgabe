
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class MarktWaage extends javax.swing.JFrame {

    private static final String SCHULE = "RBBK";
    private static final String KLASSE = "ItaO2";
    private static final String TEAM = "RBBK21ItaO_Kp";
    private static final String AUFGABE = "Marktwaage";
    private static final String Autor = "RBBK21ItaO_Kp © 2022 Diyar Hasan";

    private static final Path currentRelativePath = Paths.get("");
    private static final String s = currentRelativePath.toAbsolutePath().toString();
    // Datei die automatisch geladen wird. (Bei null wird nicht geladen)
    private static File autoLoadFile = new File(s + "\\src\\daten\\gewichtsstuecke0.txt");
    private String[] lines;
    private Wights getWights;

    public MarktWaage() {
        System.out.println(s);
        initComponents();
        taMessages.append(autoLoadFile.toString() + "\n");
        setIconImage(new ImageIcon("./src/NIcons/icons8_scales_52px.png").getImage());
        this.setTitle(Autor);
        this.setLocationRelativeTo(null);
        taMessages.append(LocalDateTime.now().toString() + "\n");
        taMessages.append("Programm \"" + AUFGABE + "\"\n");
        taMessages.append("von Team \"" + SCHULE + "_" + KLASSE + "-" + TEAM + "\" gestartet.\n");
        //Die Daten werden automatisch geladen,beim ausführen
        if (autoLoadFile != null) {
            lines = linesLaden(autoLoadFile);
            getWights = new Wights(lines);
            tFLinkeS.setText("0");
            tFRechtS.setText("0");
            showInputData();

        }
        System.out.println(tFLinkeS.getLocation());
        System.out.println(tFRechtS.getLocation());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        tFLinkeS = new javax.swing.JTextField();
        tFRechtS = new javax.swing.JTextField();
        Scales = new javax.swing.JLabel();
        Balancbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taMessages = new javax.swing.JTextArea();
        laMessages = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taDaten = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MiOeffnen = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        MiBeenden = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        miInfo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(242, 242, 242));

        tFLinkeS.setEditable(false);
        tFLinkeS.setBackground(new java.awt.Color(255, 51, 51));
        tFLinkeS.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        tFLinkeS.setForeground(new java.awt.Color(255, 255, 255));
        tFLinkeS.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tFLinkeS.setText("0");

        tFRechtS.setBackground(new java.awt.Color(255, 51, 51));
        tFRechtS.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        tFRechtS.setForeground(new java.awt.Color(255, 255, 255));
        tFRechtS.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tFRechtS.setText("0");

        Scales.setBackground(new java.awt.Color(242, 242, 242));
        Scales.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NIcons/Gleich_1.jpg"))); // NOI18N

        Balancbtn.setBackground(new java.awt.Color(102, 255, 102));
        Balancbtn.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        Balancbtn.setForeground(new java.awt.Color(255, 255, 255));
        Balancbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NIcons/icons8_scales_26px_1.png"))); // NOI18N
        Balancbtn.setText("Ausbalancieren");
        Balancbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BalancbtnBalancbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Scales, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(tFLinkeS, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(tFRechtS, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(147, 147, 147))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(Balancbtn)
                        .addGap(222, 222, 222))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tFLinkeS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tFRechtS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Scales, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Balancbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        taMessages.setEditable(false);
        taMessages.setBackground(java.awt.Color.lightGray);
        taMessages.setColumns(20);
        taMessages.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        taMessages.setRows(5);
        jScrollPane1.setViewportView(taMessages);

        laMessages.setText("Messages:");

        taDaten.setColumns(20);
        taDaten.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        taDaten.setRows(5);
        taDaten.setText("Daten der geladenen Aufgabe");
        jScrollPane2.setViewportView(taDaten);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NIcons/icons8_file_submodule_16px.png"))); // NOI18N
        jMenu1.setText("Datei");

        MiOeffnen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_DOWN_MASK));
        MiOeffnen.setText("Datei Öffnen");
        MiOeffnen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MiOeffnenActionPerformed(evt);
            }
        });
        jMenu1.add(MiOeffnen);
        jMenu1.add(jSeparator1);

        MiBeenden.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.ALT_DOWN_MASK));
        MiBeenden.setText("Beenden");
        MiBeenden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MiBeendenActionPerformed(evt);
            }
        });
        jMenu1.add(MiBeenden);

        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NIcons/icons8_info_16px.png"))); // NOI18N
        jMenu2.setText("Hilfe");

        miInfo.setText("Info");
        miInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miInfoActionPerformed(evt);
            }
        });
        jMenu2.add(miInfo);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(laMessages)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(laMessages)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BalancbtnBalancbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BalancbtnBalancbtnActionPerformed
        tFLinkeS.setLocation(198, 70);
        tFRechtS.setLocation(389, 70);
        int rS = 0;
        if (!tFRechtS.getText().equals("") || tFRechtS.getText() == null) {
            rS = Integer.parseInt(tFRechtS.getText());
        }
        Szenario1 s1 = new Szenario1();
        Szenario2 s2 = new Szenario2();
        Szenario3 s3 = new Szenario3();
        getWights.GetlightW(rS);
        if (getWights.lighterW == null || getWights.lighterW.size() < 1) {
            taMessages.append("\n" + "Bitte Gewichte laden!!");
        } else if (rS < 1 || rS > 2147483647 || tFRechtS.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Bitte geben Sie einen gültigen Wert ein!");
            tFLinkeS.setBackground(new Color(255, 51, 51));
            tFRechtS.setBackground(new Color(255, 51, 51));

        } else {

            int V1 = s1.DifferenceCalculator(0, rS, getWights.lighterW);
            getWights.GetlightW(rS);
            int V2 = s2.DifferenceCalculator(0, rS, getWights.lighterW);
            getWights.GetlightW(rS);
            int V3 = s3.DifferenceCalculator(0, rS, getWights.lighterW);
            String linkSeite = "", rechteSeite = "";
            if (V1 == 0) {
                linkSeite = "" + s1.linkeSeite;
                tFLinkeS.setText(linkSeite);
                tFLinkeS.setBackground(Color.GREEN);
                tFRechtS.setBackground(Color.GREEN);
                taMessages.append("\n" + "Eine Ausgleich war möglich, indem diese Gewichte auf der linken Seite hinzugefügt wurden:\n->" + s1.sum);
                Scales.setIcon(new ImageIcon("./src/NIcons/Gleich_1.jpg"));
                tFLinkeS.setLocation(198, 70);
                tFRechtS.setLocation(389, 70);
            } else if (V2 == 0) {
                linkSeite = "" + s2.linkeSeite;
                rechteSeite = "" + s2.rechteSeite;
                tFLinkeS.setBackground(Color.GREEN);
                tFRechtS.setBackground(Color.GREEN);
                tFLinkeS.setText(linkSeite);
                tFRechtS.setText(rechteSeite);
                taMessages.append("\n" + "Eine Ausgleich war möglich, indem diese Gewichte auf der linken und Rechte Seite hinzugefügt wurden:\nLinks->" + s2.links + "\nRechts->" + s2.rechts);
                Scales.setIcon(new ImageIcon("./src/NIcons/Gleich_1.jpg"));
                tFLinkeS.setLocation(198, 70);
                tFRechtS.setLocation(389, 70);
            } else if (V3 < V1) {
                linkSeite = "" + s3.linkeSeite;
                tFLinkeS.setBackground(new Color(235, 223, 0));
                tFRechtS.setBackground(new Color(235, 223, 0));
                tFLinkeS.setText(linkSeite);
                taMessages.append("\n" + "Leider war eine Ausgleich nicht möglich, aber durch Hinzufügen dieses Gewichts konnte das nächstgelegene Gewicht gefunden werden!\nLinks->" + s3.sum);
                Scales.setIcon(new ImageIcon("./src/NIcons/Schwerer.jpg"));
                tFLinkeS.setLocation(198, 70);
                tFRechtS.setLocation(tFRechtS.getX(), tFRechtS.getY() + 15);
            } else {
                linkSeite = "" + s1.linkeSeite;
                tFLinkeS.setBackground(new Color(235, 223, 0));
                tFRechtS.setBackground(new Color(235, 223, 0));
                tFLinkeS.setText(linkSeite);
                taMessages.append("\n" + "Leider war eine Ausgleich nicht möglich, aber durch Hinzufügen dieses Gewichts konnte das nächstgelegene Gewicht gefunden werden!\nLinks->" + s1.sum);
                Scales.setIcon(new ImageIcon("./src/NIcons/Leichter.jpg"));
                tFRechtS.setLocation(389, 70);
                tFLinkeS.setLocation(tFLinkeS.getX(), tFLinkeS.getY() + 15);
            }
        }

    }//GEN-LAST:event_BalancbtnBalancbtnActionPerformed

    private void MiOeffnenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MiOeffnenActionPerformed
        getWights = laden();
        taMessages.append(LocalTime.now().toString() + " Daten geladen:");
        showInputData();
        tFLinkeS.setText("0");
        tFRechtS.setText("0");
        tFLinkeS.setLocation(198, 70);
        tFRechtS.setLocation(389, 70);
        tFLinkeS.setBackground(new Color(255, 51, 51));
        tFRechtS.setBackground(new Color(255, 51, 51));
    }//GEN-LAST:event_MiOeffnenActionPerformed

    private void MiBeendenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MiBeendenActionPerformed
        System.exit(0);
    }//GEN-LAST:event_MiBeendenActionPerformed

    private void miInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miInfoActionPerformed

    }//GEN-LAST:event_miInfoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {

            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarktWaage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(() -> {
            new MarktWaage().setVisible(true);

        });
    }

    private Wights laden() {
        JFileChooser chooser = new JFileChooser();
        File workingDirectory = new File(System.getProperty("user.dir"));
        chooser.setCurrentDirectory(workingDirectory);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Textdateien", "txt");
        chooser.setFileFilter(filter);

        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            taMessages.setText("Datei: "
                    + chooser.getSelectedFile().getName()
                    + " laden.\n");
        }
        //Adresse:chooser.getSelectedFile():Text file(url)
        //lines:Text
        lines = linesLaden(chooser.getSelectedFile());
        return new Wights(lines);
    }

    private String[] linesLaden(File file) {
        try {
            List<String> stList = Files.readAllLines(file.toPath());
            taMessages.append("\nDatei " + file.getName() + " gelesen.\n");
            taDaten.setText("Datei " + file.getName() + ":");
            taMessages.append(stList.size() + " Zeilen.\n");
            return stList.toArray(new String[stList.size()]);
        } catch (IOException ex) {
            taMessages.append("\nDatei " + file.getName()
                    + " konnte nicht gelesen werden!\n");
            return new String[]{};
        }
    }

    //Die Gewichte ins Fenster ausgeben lassen
    private void showInputData() {
        for (String s : lines) {
            taDaten.append("\n" + s);
        }
        repaint();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Balancbtn;
    private javax.swing.JMenuItem MiBeenden;
    private javax.swing.JMenuItem MiOeffnen;
    private javax.swing.JLabel Scales;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel laMessages;
    private javax.swing.JMenuItem miInfo;
    private javax.swing.JTextField tFLinkeS;
    private javax.swing.JTextField tFRechtS;
    private javax.swing.JTextArea taDaten;
    private javax.swing.JTextArea taMessages;
    // End of variables declaration//GEN-END:variables
}
